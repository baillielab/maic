from maic.constants import T_METHOD_NONE as T_METHOD_NONE
from maic.entity import Entity as Entity
from maic.entitylist import EntityList as EntityList
from mock import MagicMock as MagicMock, Mock as Mock, call as call, patch as patch
from unittest import TestCase, skip as skip

class TestEntity(TestCase):
    def test_entity_scores_one(self) -> None: ...
    def test_entity_scores_is_settable(self) -> None: ...
    def test_entity_has_transformed_score_one(self) -> None: ...
    def test_entity_transformed_score_uses_adjusted_scores_dict(self) -> None: ...
    def test_entity_transformed_score_default_for_incorrect_method_name(self) -> None: ...
    def test_entity_transformed_score_defaults_to_key_none(self) -> None: ...
    def test_entity_owned_list_is_empty_by_default(self) -> None: ...
    def test_none_is_invalid_entity_name(self) -> None: ...
    def test_empty_string_is_invalid_entity_name(self) -> None: ...
    def test_different_object_with_same_name(self) -> None: ...
    def test_calculate_new_score_drops_to_zero(self) -> None: ...
    def test_calculate_new_score_sums_list_scores_correctly(self) -> None: ...
    def test_calculate_new_score_accounts_for_categories(self) -> None: ...
    def test_calculate_new_score_accounts_for_categories_opposite_order(self) -> None: ...
    def test_list_added_is_stored(self) -> None: ...
    def test_list_added_is_stored_only_once(self) -> None: ...
    def test_entity_knows_contributing_list_components(self) -> None: ...
    def test_entity_reports_raw_scores(self) -> None: ...
    def test_reset(self) -> None: ...
    def test_sum_weights(self) -> None: ...
