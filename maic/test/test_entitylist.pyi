from _typeshed import Incomplete
from maic.entity import Entity as Entity
from maic.entitylist import EntityList as EntityList, ExponentialEntityList as ExponentialEntityList, FAILED_RANKED_LIST_DESCENT_STEP as FAILED_RANKED_LIST_DESCENT_STEP, adjusted_weight as adjusted_weight
from unittest import TestCase, skip as skip

class TestEntityList(TestCase):
    def test_entitylist_is_empty_by_default(self) -> None: ...
    def test_entitylist_has_initial_weight_one(self) -> None: ...
    def test_empty_entitylist_reverts_to_weight_zero(self) -> None: ...
    def test_entitylist_calculates_weight_from_entities(self) -> None: ...
    def test_entitylist_returns_absolute_delta_value(self) -> None: ...
    def test_entitylist_reset(self) -> None: ...
    hit_successfully: bool
    def test_entitylist_calls_fit_curves_after_calculating_weight(self) -> None: ...
    def test_entitylist_reports_adjusted_weight_for_given_score(self) -> None: ...
    def test_entitylist_reports_zero_weight_for_single_entity_entitylist(self) -> None: ...
    def test_entitylist_fails_adjusted_weight_on_empty_entitylist(self) -> None: ...
    def test_entitylist_is_unranked_by_default(self) -> None: ...
    def test_entitylist_can_be_set_ranked(self) -> None: ...
    def test_entity_can_be_appended_to_entitylist(self) -> None: ...
    def test_entitylist_category_name_is_empty_by_default(self) -> None: ...
    def test_category_name_is_trimmed_left(self) -> None: ...
    def test_category_name_is_trimmed_right(self) -> None: ...
    def test_category_name_is_trimmed_both(self) -> None: ...
    def test_category_is_unknown_number_by_default(self) -> None: ...
    def test_two_lists_have_different_categories_by_default(self) -> None: ...
    def test_category_cannot_be_set_directly(self) -> None: ...
    def test_category_converts_to_uppercase_when_set(self) -> None: ...
    def test_category_is_trimmed_left(self) -> None: ...
    def test_category_is_trimmed_right(self) -> None: ...
    def test_category_is_trimmed_both_and_internally_subbed(self) -> None: ...
    def test_entitylist_name_is_empty_by_default(self) -> None: ...
    def test_entitylist_name_is_trimmed_left(self) -> None: ...
    def test_entitylist_name_is_trimmed_right(self) -> None: ...
    def test_entitylist_name_is_trimmed_both(self) -> None: ...
    def test_weight_for_entity_reports_zero_for_none_entity(self) -> None: ...
    def test_weight_for_entity_reports_zero_for_noncontained_entity(self) -> None: ...
    index_called: Incomplete
    def test_weight_for_entity_uses_method_call_for_contained_entity(self): ...
    def test_weight_for_entity_returns_list_weight_for_contained_entity(self) -> None: ...
    def test_exponential_list_calculates_proper_fit(self) -> None: ...
    def test_exponential_list_fails_gracefully_if_no_fit(self, mock_curve_fit, mock_logger) -> None: ...
    def test_ranked_list_names_self_correctly(self) -> None: ...
    def test_unranked_list_names_self_correctly(self) -> None: ...
    def test_unfitted_exponential_list_returns_weight_one(self) -> None: ...
    def test_entitylist_has_initial_base_score_mean_zero(self) -> None: ...
    def test_entitylist_has_initial_base_score_stdev_one(self) -> None: ...
    def test_adjusted_weight(self) -> None: ...
